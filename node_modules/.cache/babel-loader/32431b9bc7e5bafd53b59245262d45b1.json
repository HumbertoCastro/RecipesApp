{"ast":null,"code":"var _jsxFileName = \"/home/humberto/Projetos/sd-016-a-project-recipes-app/src/components/RenderRecipes.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport shareIcon from '../images/shareIcon.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RenderRecipes() {\n  _s();\n\n  const history = useHistory();\n  let dones = [];\n\n  if (history.location.pathname.includes('favorite')) {\n    console.log('d');\n    dones = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  } else {\n    dones = JSON.parse(localStorage.getItem('doneRecipes'));\n  }\n\n  console.log(dones);\n  dones = dones.map(x => {\n    if (x.type === 'food') {\n      x.category = `${x.nationality} - ${x.category}`;\n    } else {\n      x.category = x.alcoholicOrNot;\n    }\n\n    return x;\n  });\n  const [renderList, setRenderList] = useState(dones);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"filter-by-all-btn\",\n      onClick: () => {\n        setRenderList(dones);\n      },\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"filter-by-food-btn\",\n      onClick: () => {\n        setRenderList(dones.filter(x => x.type === 'food'));\n      },\n      children: \"Food\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"filter-by-drink-btn\",\n      onClick: () => {\n        setRenderList(dones.filter(x => x.type === 'drink'));\n      },\n      children: \"Drinks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), renderList.map((x, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          history.push(`${x.type}s/${x.id}`);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: x.image,\n          alt: \"img\",\n          \"data-testid\": `${index}-horizontal-image`,\n          width: \"150px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": `${index}-horizontal-top-text`,\n        children: x.category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": `${index}-horizontal-name`,\n        onClick: () => {\n          history.push(`${x.type}s/${x.id}`);\n        },\n        children: x.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": `${index}-horizontal-done-date`,\n        children: x.doneDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": `${index}-horizontal-share-btn`,\n        type: \"button\",\n        className: \"share-btn-done\",\n        src: shareIcon,\n        onClick: () => {\n          navigator.clipboard.writeText(`http://localhost:3000/${x.type}s/${x.id}`);\n          const btn = document.querySelector('.share-btn-done');\n          btn.innerHTML = 'Link copied!';\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"share\",\n          src: shareIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), x.tags.map((y, ind) => /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": `${index}-${y}-horizontal-tag`,\n        children: y\n      }, `${ind}-tags`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this))]\n    }, `${index}-done`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RenderRecipes, \"p+aFbxN7hvulNHks6dsn9rjw+LQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = RenderRecipes;\nexport default RenderRecipes;\nRenderRecipes.prototype = {\n  recipe: PropTypes.shape({\n    src: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    cat: PropTypes.string.isRequired\n  }).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderRecipes\");","map":{"version":3,"sources":["/home/humberto/Projetos/sd-016-a-project-recipes-app/src/components/RenderRecipes.jsx"],"names":["React","useState","PropTypes","useHistory","shareIcon","RenderRecipes","history","dones","location","pathname","includes","console","log","JSON","parse","localStorage","getItem","map","x","type","category","nationality","alcoholicOrNot","renderList","setRenderList","filter","index","push","id","image","name","doneDate","navigator","clipboard","writeText","btn","document","querySelector","innerHTML","tags","y","ind","prototype","recipe","shape","src","string","isRequired","cat"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport shareIcon from '../images/shareIcon.svg';\n\nfunction RenderRecipes() {\n  const history = useHistory();\n  let dones = [];\n  if (history.location.pathname.includes('favorite')) {\n    console.log('d');\n    dones = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  } else {\n    dones = JSON.parse(localStorage.getItem('doneRecipes'));\n  }\n  console.log(dones);\n  dones = dones.map((x) => {\n    if (x.type === 'food') {\n      x.category = `${x.nationality} - ${x.category}`;\n    } else {\n      x.category = x.alcoholicOrNot;\n    }\n    return x;\n  });\n  const [renderList, setRenderList] = useState(dones);\n  return (\n    <div>\n      <button\n        type=\"button\"\n        data-testid=\"filter-by-all-btn\"\n        onClick={ () => {\n          setRenderList(dones);\n        } }\n      >\n        All\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"filter-by-food-btn\"\n        onClick={ () => {\n          setRenderList(dones.filter((x) => x.type === 'food'));\n        } }\n      >\n        Food\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"filter-by-drink-btn\"\n        onClick={ () => {\n          setRenderList(dones.filter((x) => x.type === 'drink'));\n        } }\n      >\n        Drinks\n      </button>\n      {\n        renderList.map((x, index) => (\n          <div key={ `${index}-done` }>\n            <button\n              type=\"button\"\n              onClick={ () => {\n                history.push(`${x.type}s/${x.id}`);\n              } }\n            >\n              <img\n                src={ x.image }\n                alt=\"img\"\n                data-testid={ `${index}-horizontal-image` }\n                width=\"150px\"\n              />\n            </button>\n            <p data-testid={ `${index}-horizontal-top-text` }>\n              {\n                x.category\n              }\n            </p>\n            <button\n              type=\"button\"\n              data-testid={ `${index}-horizontal-name` }\n              onClick={ () => {\n                history.push(`${x.type}s/${x.id}`);\n              } }\n            >\n              {\n                x.name\n              }\n            </button>\n            <p data-testid={ `${index}-horizontal-done-date` }>\n              {\n                x.doneDate\n              }\n            </p>\n            <button\n              data-testid={ `${index}-horizontal-share-btn` }\n              type=\"button\"\n              className=\"share-btn-done\"\n              src={ shareIcon }\n              onClick={ () => {\n                navigator.clipboard.writeText(`http://localhost:3000/${x.type}s/${x.id}`);\n                const btn = document.querySelector('.share-btn-done');\n                btn.innerHTML = 'Link copied!';\n              } }\n            >\n              <img alt=\"share\" src={ shareIcon } />\n            </button>\n            {\n              x.tags.map((y, ind) => (\n                <p key={ `${ind}-tags` } data-testid={ `${index}-${y}-horizontal-tag` }>\n                  {\n                    y\n                  }\n                </p>\n              ))\n            }\n          </div>\n        ))\n      }\n    </div>\n  );\n}\nexport default RenderRecipes;\n\nRenderRecipes.prototype = {\n  recipe: PropTypes.shape({\n    src: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    cat: PropTypes.string.isRequired,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}