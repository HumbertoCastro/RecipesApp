{"ast":null,"code":"var _jsxFileName = \"/home/humberto/Projetos/sd-016-a-project-recipes-app/src/components/CheckBoxIngredient.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CheckBoxIngredient(_ref) {\n  _s();\n\n  let {\n    ingr,\n    i\n  } = _ref;\n  const [check, setCheck] = useState(false);\n  const history = useHistory();\n\n  const clk = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    const {\n      value\n    } = target;\n    const {\n      cocktails,\n      meals\n    } = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    let array = [value];\n\n    if (history.location.pathname.includes('drinks')) {\n      if (cocktails[element.idDrink] !== undefined) {\n        array = cocktails[element.idDrink];\n        array.push(value);\n      }\n\n      const newObject = {\n        cocktails: { ...cocktails,\n          [element.idDrink]: array\n        },\n        meals: { ...meals\n        }\n      };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(newObject));\n    } else {\n      if (meals[element.idMeal] !== undefined) {\n        array = meals[element.idMeal];\n        array.push(value);\n      }\n\n      const newObject = {\n        cocktails: { ...cocktails\n        },\n        meals: { ...meals,\n          [element.idMeal]: array\n        }\n      };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(newObject));\n      setCheck(true);\n    }\n  };\n\n  const validateCheck = () => {\n    let {\n      cocktails,\n      meals\n    } = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    cocktails = Object.values(cocktails);\n    meals = Object.values(meals);\n\n    if (meals.some(x => x.some(y => y === ingr)) || cocktails.some(x => x.some(y => y === ingr))) {\n      setCheck(true);\n    } else {\n      setCheck(false);\n    }\n\n    return check;\n  };\n\n  useEffect(() => {\n    validateCheck();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": `${i}-ingredient-step`,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      name: `${i}-checkbox`,\n      className: \"checkboxes\",\n      onClick: clk,\n      defaultChecked: check,\n      checked: () => {\n        if (validateCheck()) {\n          return true;\n        }\n\n        return false;\n      },\n      value: ingr\n    }, `${i}-food`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: `${i}-checkbox`,\n      children: ingr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, `${i}-food-ingrediet`, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckBoxIngredient, \"4/dJN3Y26pUllaKA22aHqtgrUpI=\", false, function () {\n  return [useHistory];\n});\n\n_c = CheckBoxIngredient;\nexport default CheckBoxIngredient;\nCheckBoxIngredient.propTypes = {\n  ingr: PropTypes.string.isRequired,\n  i: PropTypes.number.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckBoxIngredient\");","map":{"version":3,"sources":["/home/humberto/Projetos/sd-016-a-project-recipes-app/src/components/CheckBoxIngredient.jsx"],"names":["React","useState","useEffect","PropTypes","useHistory","CheckBoxIngredient","ingr","i","check","setCheck","history","clk","target","value","cocktails","meals","JSON","parse","localStorage","getItem","array","location","pathname","includes","element","idDrink","undefined","push","newObject","setItem","stringify","idMeal","validateCheck","Object","values","some","x","y","propTypes","string","isRequired","number"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nfunction CheckBoxIngredient({ ingr, i }) {\n  const [check, setCheck] = useState(false);\n  const history = useHistory();\n  const clk = ({ target }) => {\n    const { value } = target;\n    const { cocktails, meals } = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    let array = [value];\n    if (history.location.pathname.includes('drinks')) {\n      if (cocktails[element.idDrink] !== undefined) {\n        array = cocktails[element.idDrink];\n        array.push(value);\n      }\n      const newObject = {\n        cocktails: {\n          ...cocktails,\n          [element.idDrink]: array,\n        },\n        meals: {\n          ...meals,\n        },\n      };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(newObject));\n    } else {\n      if (meals[element.idMeal] !== undefined) {\n        array = meals[element.idMeal];\n        array.push(value);\n      }\n      const newObject = {\n        cocktails: {\n          ...cocktails,\n        },\n        meals: {\n          ...meals,\n          [element.idMeal]: array,\n        },\n      };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(newObject));\n      setCheck(true);\n    }\n  };\n  const validateCheck = () => {\n    let { cocktails, meals } = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    cocktails = Object.values(cocktails);\n    meals = Object.values(meals);\n    if (meals.some((x) => x.some((y) => y === ingr))\n     || cocktails.some((x) => x.some((y) => y === ingr))) {\n      setCheck(true);\n    } else {\n      setCheck(false);\n    }\n    return check;\n  };\n\n  useEffect(() => {\n    validateCheck();\n  }, []);\n\n  return (\n    <div\n      key={ `${i}-food-ingrediet` }\n      data-testid={ `${i}-ingredient-step` }\n    >\n      <input\n        type=\"checkbox\"\n        key={ `${i}-food` }\n        name={ `${i}-checkbox` }\n        className=\"checkboxes\"\n        onClick={ clk }\n        defaultChecked={ check }\n        checked={ () => {\n          if (validateCheck()) {\n            return true;\n          }\n          return false;\n        } }\n        value={ ingr }\n      />\n      <label htmlFor={ `${i}-checkbox` }>{ ingr }</label>\n    </div>\n  );\n}\nexport default CheckBoxIngredient;\n\nCheckBoxIngredient.propTypes = {\n  ingr: PropTypes.string.isRequired,\n  i: PropTypes.number.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}