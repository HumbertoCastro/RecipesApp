{"ast":null,"code":"var _jsxFileName = \"/home/humberto/Projetos/sd-016-a-project-recipes-app/src/components/Ingredients.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Ingredients(_ref) {\n  _s();\n\n  let {\n    element\n  } = _ref;\n\n  if (localStorage.getItem('inProgressRecipes') === undefined) {\n    const obj = {\n      cocktails: {},\n      meals: {}\n    };\n    console.log(JSON.stringify(obj));\n    localStorage.setItem('inProgressRecipes', JSON.stringify(obj));\n  }\n\n  const verifyCheck = value => {\n    const retorno = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (retorno === undefined || retorno === null) {\n      return false;\n    }\n\n    let {\n      cocktails,\n      meals\n    } = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    cocktails = Object.values(cocktails);\n    meals = Object.values(meals);\n\n    if (meals.some(x => x === value) || cocktails.some(x => x === value)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const history = useHistory();\n\n  const handleCLick = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    target.checked = true;\n    const {\n      value\n    } = target;\n    const {\n      cocktails,\n      meals\n    } = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    let array = [value];\n\n    if (cocktails[element.idMeal] !== undefined) {\n      array = cocktails[element.idMeal];\n      array.push(value);\n    }\n\n    const newObject = {\n      cocktails: { ...cocktails,\n        [element.idMeal]: array\n      },\n      meals: { ...meals\n      }\n    };\n    localStorage.setItem('inProgressRecipes', JSON.stringify(newObject));\n  };\n\n  const foodIngredient = Object.values(Object.fromEntries(Object.entries(element).filter(_ref3 => {\n    let [key] = _ref3;\n    return key.includes('strIngredient');\n  }))).filter(x => x !== null && x !== '');\n  const foodMeasure = Object.values(Object.fromEntries(Object.entries(element).filter(_ref4 => {\n    let [key] = _ref4;\n    return key.includes('strMeasure');\n  }))).filter(x => x !== null && x !== '');\n  const ing = '-ingredient-name-and-measure';\n\n  if (history.location.pathname.includes('/in-progress')) {\n    return foodIngredient.map((x, index) => {\n      let check = false;\n\n      if (verifyCheck(x)) {\n        check = true;\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": `${index}-ingredient-step`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: `${index}-checkbox`,\n          onClick: handleCLick,\n          checked: check,\n          value: x\n        }, `${index}-food`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `${index}-checkbox`,\n          children: x\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, `${index}-food-ingrediet`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this);\n    });\n  }\n\n  return foodIngredient.map((x, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      \"data-testid\": `${index}${ing}`,\n      children: x\n    }, `${index}-food`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      \"data-testid\": `${index}${ing}`,\n      children: foodMeasure[index]\n    }, `${index}-`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, `${index}-food-ingrediet`, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 7\n  }, this));\n}\n\n_s(Ingredients, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Ingredients;\nexport default Ingredients;\nIngredients.propTypes = {\n  element: PropTypes.shape({\n    element: PropTypes.string.isRequired\n  }).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Ingredients\");","map":{"version":3,"sources":["/home/humberto/Projetos/sd-016-a-project-recipes-app/src/components/Ingredients.jsx"],"names":["React","PropTypes","useHistory","Ingredients","element","localStorage","getItem","undefined","obj","cocktails","meals","console","log","JSON","stringify","setItem","verifyCheck","value","retorno","parse","Object","values","some","x","history","handleCLick","target","checked","array","idMeal","push","newObject","foodIngredient","fromEntries","entries","filter","key","includes","foodMeasure","ing","location","pathname","map","index","check","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nfunction Ingredients({ element }) {\n  if (localStorage.getItem('inProgressRecipes') === undefined) {\n    const obj = {\n      cocktails: {\n      },\n      meals: {\n      },\n    };\n    console.log(JSON.stringify(obj));\n    localStorage.setItem('inProgressRecipes', JSON.stringify(obj));\n  }\n  const verifyCheck = (value) => {\n    const retorno = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (retorno === undefined || retorno === null) {\n      return false;\n    }\n    let { cocktails, meals } = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    cocktails = Object.values(cocktails);\n    meals = Object.values(meals);\n    if (meals.some((x) => x === value) || cocktails.some((x) => x === value)) {\n      return true;\n    }\n    return false;\n  };\n  const history = useHistory();\n  const handleCLick = ({ target }) => {\n    target.checked = true;\n    const { value } = target;\n    const { cocktails, meals } = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    let array = [value];\n    if (cocktails[element.idMeal] !== undefined) {\n      array = cocktails[element.idMeal];\n      array.push(value);\n    }\n    const newObject = {\n      cocktails: {\n        ...cocktails,\n        [element.idMeal]: array,\n      },\n      meals: {\n        ...meals,\n      },\n    };\n    localStorage.setItem('inProgressRecipes', JSON.stringify(newObject));\n  };\n  const foodIngredient = Object.values(Object\n    .fromEntries(Object\n      .entries(element)\n      .filter(([key]) => key.includes('strIngredient'))))\n    .filter((x) => x !== null && x !== '');\n  const foodMeasure = Object.values(Object\n    .fromEntries(Object\n      .entries(element)\n      .filter(([key]) => key.includes('strMeasure'))))\n    .filter((x) => x !== null && x !== '');\n  const ing = '-ingredient-name-and-measure';\n  if (history.location.pathname.includes('/in-progress')) {\n    return foodIngredient\n      .map((x, index) => {\n        let check = false;\n        if (verifyCheck(x)) {\n          check = true;\n        }\n        return (\n          <div\n            key={ `${index}-food-ingrediet` }\n            data-testid={ `${index}-ingredient-step` }\n          >\n            <input\n              type=\"checkbox\"\n              key={ `${index}-food` }\n              name={ `${index}-checkbox` }\n              onClick={ handleCLick }\n              checked={ check }\n              value={ x }\n            />\n            <label htmlFor={ `${index}-checkbox` }>{ x }</label>\n          </div>\n        );\n      });\n  }\n  return foodIngredient\n    .map((x, index) => (\n      <div key={ `${index}-food-ingrediet` }>\n        <li key={ `${index}-food` } data-testid={ `${index}${ing}` }>{x}</li>\n        <li\n          key={ `${index}-` }\n          data-testid={ `${index}${ing}` }\n        >\n          {foodMeasure[index]}\n        </li>\n      </div>\n    ));\n}\n\nexport default Ingredients;\n\nIngredients.propTypes = {\n  element: PropTypes.shape({\n    element: PropTypes.string.isRequired,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}