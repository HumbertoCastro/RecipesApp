{"ast":null,"code":"var _jsxFileName = \"/home/humberto/Projetos/sd-016-a-project-recipes-app/src/components/ElementCardDrinks.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport recipesContext from '../context/recipesContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ElementCardDrinks() {\n  _s();\n\n  const [catDrinks, setCatDrinks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [toggle, setToggle] = useState('');\n  const history = useHistory();\n\n  const requestCat = () => {\n    fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list').then(x => x.json()).then(y => {\n      console.log(y.drinks);\n      y.drinks.length = 5;\n      setLoading(false);\n      setCatDrinks(y.drinks);\n    });\n  };\n\n  const {\n    apiSearch,\n    setApiSearch\n  } = useContext(recipesContext);\n\n  if (Object.keys(apiSearch).length === 0) {\n    fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=').then(x => x.json()).then(y => {\n      y.drinks.length = 12;\n      console.log(y);\n      setApiSearch(y);\n    });\n  } else {\n    if (apiSearch.drinks.length > 1) {\n      apiSearch.drinks.length = 12;\n    }\n\n    console.log('');\n  }\n\n  useEffect(() => {\n    requestCat();\n  }, []);\n\n  const renderCards = () => apiSearch.drinks.map((card, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    \"data-testid\": `${index}-recipe-card`,\n    className: \"cards\",\n    onClick: () => {\n      history.push(`/drinks/${card.idDrink}`);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      \"data-testid\": `${index}-card-name`,\n      children: card.strDrink\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"food\",\n      src: card.strDrinkThumb,\n      width: \"100px\",\n      height: \"100px\",\n      \"data-testid\": `${index}-card-img`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this));\n\n  const handleCLick = _ref => {\n    let {\n      target: {\n        value\n      }\n    } = _ref;\n\n    if (toggle === value) {\n      setApiSearch([]);\n      setToggle('');\n    } else {\n      fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${value}`).then(result => result.json()).then(p => {\n        console.log(p);\n        p.drinks.length = 12;\n        setToggle(value);\n        setApiSearch(p);\n      });\n    }\n  };\n\n  const renderCategorias = () => catDrinks.map((y, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    value: y.strCategory,\n    className: \"cat-card\",\n    \"data-testid\": `${y.strCategory}-category-filter`,\n    onClick: handleCLick,\n    children: y.strCategory\n  }, `cat${index}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }, this));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"elements-cards\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category\",\n      children: [loading ? null : renderCategorias(), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"All-category-filter\",\n        onClick: () => setApiSearch([]),\n        type: \"button\",\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), Object.keys(apiSearch).length > 0 ? renderCards() : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ElementCardDrinks, \"JkNpel0fshz7DGqPjsl8ioUXawM=\", false, function () {\n  return [useHistory];\n});\n\n_c = ElementCardDrinks;\nexport default ElementCardDrinks;\n\nvar _c;\n\n$RefreshReg$(_c, \"ElementCardDrinks\");","map":{"version":3,"sources":["/home/humberto/Projetos/sd-016-a-project-recipes-app/src/components/ElementCardDrinks.jsx"],"names":["React","useContext","useEffect","useState","useHistory","recipesContext","ElementCardDrinks","catDrinks","setCatDrinks","loading","setLoading","toggle","setToggle","history","requestCat","fetch","then","x","json","y","console","log","drinks","length","apiSearch","setApiSearch","Object","keys","renderCards","map","card","index","push","idDrink","strDrink","strDrinkThumb","handleCLick","target","value","result","p","renderCategorias","strCategory"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport recipesContext from '../context/recipesContext';\n\nfunction ElementCardDrinks() {\n  const [catDrinks, setCatDrinks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [toggle, setToggle] = useState('');\n  const history = useHistory();\n\n  const requestCat = () => {\n    fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list')\n      .then((x) => x.json()).then((y) => {\n        console.log(y.drinks);\n        y.drinks.length = 5;\n        setLoading(false);\n        setCatDrinks(y.drinks);\n      });\n  };\n  const {\n    apiSearch,\n    setApiSearch,\n  } = useContext(recipesContext);\n  if (Object.keys(apiSearch).length === 0) {\n    fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=')\n      .then((x) => x.json()).then((y) => {\n        y.drinks.length = 12;\n        console.log(y);\n        setApiSearch(y);\n      });\n  } else {\n    if (apiSearch.drinks.length > 1) {\n      apiSearch.drinks.length = 12;\n    }\n    console.log('');\n  }\n\n  useEffect(() => {\n    requestCat();\n  }, []);\n  const renderCards = () => apiSearch.drinks.map((card, index) => (\n    <button\n      type=\"button\"\n      data-testid={ `${index}-recipe-card` }\n      key={ index }\n      className=\"cards\"\n      onClick={ () => { history.push(`/drinks/${card.idDrink}`); } }\n    >\n      <h1 data-testid={ `${index}-card-name` }>{ card.strDrink }</h1>\n      <img\n        alt=\"food\"\n        src={ card.strDrinkThumb }\n        width=\"100px\"\n        height=\"100px\"\n        data-testid={ `${index}-card-img` }\n      />\n    </button>\n  ));\n\n  const handleCLick = ({ target: { value } }) => {\n    if (toggle === value) {\n      setApiSearch([]);\n      setToggle('');\n    } else {\n      fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${value}`)\n        .then((result) => result.json()).then((p) => {\n          console.log(p);\n          p.drinks.length = 12;\n          setToggle(value);\n          setApiSearch(p);\n        });\n    }\n  };\n  const renderCategorias = () => (\n    catDrinks.map((y, index) => (\n      <button\n        type=\"button\"\n        key={ `cat${index}` }\n        value={ y.strCategory }\n        className=\"cat-card\"\n        data-testid={ `${y.strCategory}-category-filter` }\n        onClick={ handleCLick }\n      >\n        {\n          y.strCategory\n        }\n      </button>))\n  );\n  return (\n    <div\n      className=\"elements-cards\"\n    >\n      <div className=\"category\">\n        { loading ? null : renderCategorias() }\n        <button\n          data-testid=\"All-category-filter\"\n          onClick={ () => setApiSearch([]) }\n          type=\"button\"\n        >\n          All\n        </button>\n      </div>\n      {Object.keys(apiSearch).length > 0 ? renderCards() : null}\n    </div>\n  );\n}\nexport default ElementCardDrinks;\n"]},"metadata":{},"sourceType":"module"}