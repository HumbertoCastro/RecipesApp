{"ast":null,"code":"var _jsxFileName = \"/home/humberto/Projetos/sd-016-a-project-recipes-app/src/components/CheckBoxIngredient.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CheckBoxIngredient(_ref) {\n  _s();\n\n  let {\n    ingr,\n    clk,\n    i\n  } = _ref;\n  const [check, setCheck] = useState(false);\n\n  const validateCheck = () => {\n    let {\n      cocktails,\n      meals\n    } = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    cocktails = Object.values(cocktails);\n    meals = Object.values(meals);\n\n    if (meals.some(x => x.some(y => y === ingr)) || cocktails.some(x => x.some(y => y === ingr))) {\n      setCheck(true);\n    } else {\n      setCheck(false);\n    }\n  };\n\n  const onClickBtn = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    const inputs = document.querySelectorAll('.checkboxes');\n    const finish = document.querySelector('.finish-btn');\n    finish.checked = true;\n\n    for (let z = 0; z < inputs.length; z += 1) {\n      if (inputs[z].checked === false) {\n        finish.checked = true;\n        console.log(finish.checked);\n      }\n    }\n\n    setCheck(true);\n    clk(target);\n  };\n\n  useEffect(() => {\n    validateCheck();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": `${i}-ingredient-step`,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      name: `${i}-checkbox`,\n      className: \"checkboxes\",\n      onClick: onClickBtn,\n      defaultChecked: check,\n      checked: check,\n      value: ingr\n    }, `${i}-food`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: `${i}-checkbox`,\n      children: ingr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, `${i}-food-ingrediet`, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckBoxIngredient, \"MlGyz5WnialQ8kF9iIFA++BZIgw=\");\n\n_c = CheckBoxIngredient;\nexport default CheckBoxIngredient;\nCheckBoxIngredient.propTypes = {\n  ingr: PropTypes.string.isRequired,\n  clk: PropTypes.func.isRequired,\n  i: PropTypes.number.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckBoxIngredient\");","map":{"version":3,"sources":["/home/humberto/Projetos/sd-016-a-project-recipes-app/src/components/CheckBoxIngredient.jsx"],"names":["React","useState","useEffect","PropTypes","CheckBoxIngredient","ingr","clk","i","check","setCheck","validateCheck","cocktails","meals","JSON","parse","localStorage","getItem","Object","values","some","x","y","onClickBtn","target","inputs","document","querySelectorAll","finish","querySelector","checked","z","length","console","log","propTypes","string","isRequired","func","number"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction CheckBoxIngredient({ ingr, clk, i }) {\n  const [check, setCheck] = useState(false);\n  const validateCheck = () => {\n    let { cocktails, meals } = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    cocktails = Object.values(cocktails);\n    meals = Object.values(meals);\n    if (meals.some((x) => x.some((y) => y === ingr))\n     || cocktails.some((x) => x.some((y) => y === ingr))) {\n      setCheck(true);\n    } else {\n      setCheck(false);\n    }\n  };\n\n  const onClickBtn = ({ target }) => {\n    const inputs = document.querySelectorAll('.checkboxes');\n    const finish = document.querySelector('.finish-btn');\n    finish.checked = true;\n    for (let z = 0; z < inputs.length; z += 1) {\n      if (inputs[z].checked === false) {\n        finish.checked = true;\n        console.log(finish.checked);\n      }\n    }\n\n    setCheck(true);\n    clk(target);\n  };\n\n  useEffect(() => {\n    validateCheck();\n  }, []);\n\n  return (\n    <div\n      key={ `${i}-food-ingrediet` }\n      data-testid={ `${i}-ingredient-step` }\n    >\n      <input\n        type=\"checkbox\"\n        key={ `${i}-food` }\n        name={ `${i}-checkbox` }\n        className=\"checkboxes\"\n        onClick={ onClickBtn }\n        defaultChecked={ check }\n        checked={ check }\n        value={ ingr }\n      />\n      <label htmlFor={ `${i}-checkbox` }>{ ingr }</label>\n    </div>\n  );\n}\nexport default CheckBoxIngredient;\n\nCheckBoxIngredient.propTypes = {\n  ingr: PropTypes.string.isRequired,\n  clk: PropTypes.func.isRequired,\n  i: PropTypes.number.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}