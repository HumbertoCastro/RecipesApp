{"ast":null,"code":"var _jsxFileName = \"/home/humberto/Projetos/sd-016-a-project-recipes-app/src/components/CheckBoxIngredient.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CheckBoxIngredient(_ref) {\n  _s();\n\n  let {\n    ingr,\n    click,\n    i\n  } = _ref;\n  const [check, setCheck] = useState(false);\n  let {\n    cocktails,\n    meals\n  } = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  cocktails = Object.values(cocktails);\n  meals = Object.values(meals);\n  console.log(meals);\n\n  if (meals.some(x => x === value) || cocktails.some(x => x === value)) {\n    setCheck(true);\n  } else {\n    setCheck(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": `${i}-ingredient-step`,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      name: `${i}-checkbox`,\n      className: \"checkboxes\",\n      onClick: click,\n      checked: check,\n      value: ingr\n    }, `${i}-food`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: `${i}-checkbox`,\n      children: ingr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, `${i}-food-ingrediet`, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckBoxIngredient, \"DRDVi1AbBAW051ishmTW/zYCTgg=\");\n\n_c = CheckBoxIngredient;\nexport default CheckBoxIngredient;\nCheckBoxIngredient.propTypes = {\n  element: PropTypes.shape({\n    element: PropTypes.string.isRequired\n  }).isRequired,\n  ingr: PropTypes.string.isRequired,\n  click: PropTypes.func.isRequired,\n  i: PropTypes.number.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckBoxIngredient\");","map":{"version":3,"sources":["/home/humberto/Projetos/sd-016-a-project-recipes-app/src/components/CheckBoxIngredient.jsx"],"names":["React","PropTypes","CheckBoxIngredient","ingr","click","i","check","setCheck","useState","cocktails","meals","JSON","parse","localStorage","getItem","Object","values","console","log","some","x","value","propTypes","element","shape","string","isRequired","func","number"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,SAASC,kBAAT,OAAgD;AAAA;;AAAA,MAApB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAoB;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,KAAD,CAAlC;AACA,MAAI;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAuBC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAAX,CAA3B;AACAL,EAAAA,SAAS,GAAGM,MAAM,CAACC,MAAP,CAAcP,SAAd,CAAZ;AACAC,EAAAA,KAAK,GAAGK,MAAM,CAACC,MAAP,CAAcN,KAAd,CAAR;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;;AACA,MAAIA,KAAK,CAACS,IAAN,CAAYC,CAAD,IAAOA,CAAC,KAAKC,KAAxB,KAAkCZ,SAAS,CAACU,IAAV,CAAgBC,CAAD,IAAOA,CAAC,KAAKC,KAA5B,CAAtC,EAA0E;AACxEd,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFD,MAEO;AACLA,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;;AACD,sBACE;AAEE,mBAAe,GAAEF,CAAE,kBAFrB;AAAA,4BAIE;AACE,MAAA,IAAI,EAAC,UADP;AAGE,MAAA,IAAI,EAAI,GAAEA,CAAE,WAHd;AAIE,MAAA,SAAS,EAAC,YAJZ;AAKE,MAAA,OAAO,EAAGD,KALZ;AAME,MAAA,OAAO,EAAGE,KANZ;AAOE,MAAA,KAAK,EAAGH;AAPV,OAES,GAAEE,CAAE,OAFb;AAAA;AAAA;AAAA;AAAA,YAJF,eAaE;AAAO,MAAA,OAAO,EAAI,GAAEA,CAAE,WAAtB;AAAA,gBAAqCF;AAArC;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA,KACS,GAAEE,CAAE,iBADb;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA5BQH,kB;;KAAAA,kB;AA6BT,eAAeA,kBAAf;AAEAA,kBAAkB,CAACoB,SAAnB,GAA+B;AAC7BC,EAAAA,OAAO,EAAEtB,SAAS,CAACuB,KAAV,CAAgB;AACvBD,IAAAA,OAAO,EAAEtB,SAAS,CAACwB,MAAV,CAAiBC;AADH,GAAhB,EAENA,UAH0B;AAI7BvB,EAAAA,IAAI,EAAEF,SAAS,CAACwB,MAAV,CAAiBC,UAJM;AAK7BtB,EAAAA,KAAK,EAAEH,SAAS,CAAC0B,IAAV,CAAeD,UALO;AAM7BrB,EAAAA,CAAC,EAAEJ,SAAS,CAAC2B,MAAV,CAAiBF;AANS,CAA/B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction CheckBoxIngredient({ ingr, click, i }) {\n  const [check, setCheck] = useState(false);\n  let { cocktails, meals } = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  cocktails = Object.values(cocktails);\n  meals = Object.values(meals);\n  console.log(meals);\n  if (meals.some((x) => x === value) || cocktails.some((x) => x === value)) {\n    setCheck(true);\n  } else {\n    setCheck(false);\n  }\n  return (\n    <div\n      key={ `${i}-food-ingrediet` }\n      data-testid={ `${i}-ingredient-step` }\n    >\n      <input\n        type=\"checkbox\"\n        key={ `${i}-food` }\n        name={ `${i}-checkbox` }\n        className=\"checkboxes\"\n        onClick={ click }\n        checked={ check }\n        value={ ingr }\n      />\n      <label htmlFor={ `${i}-checkbox` }>{ ingr }</label>\n    </div>\n  );\n}\nexport default CheckBoxIngredient;\n\nCheckBoxIngredient.propTypes = {\n  element: PropTypes.shape({\n    element: PropTypes.string.isRequired,\n  }).isRequired,\n  ingr: PropTypes.string.isRequired,\n  click: PropTypes.func.isRequired,\n  i: PropTypes.number.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}