{"ast":null,"code":"var _jsxFileName = \"/home/humberto/Projetos/sd-016-a-project-recipes-app/src/pages/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport recipesContext from '../context/recipesContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(_ref) {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const {\n    setLoginData\n  } = useContext(recipesContext);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [disable, setDisable] = useState(true);\n  useEffect(() => {\n    const minLength = 6;\n    const re = /\\S+@\\S+\\.\\S+/; // refer = https://www.horadecodar.com.br/2020/09/07/expressao-regular-para-validar-e-mail-javascript-regex/\n\n    if (password.length > minLength && re.test(email)) {\n      setDisable(false);\n    } else {\n      setDisable(true);\n    }\n  }, [email, password]);\n\n  const submitButton = () => {\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n    setLoginData({\n      email,\n      password\n    });\n    const emailKey = {\n      email\n    };\n    localStorage.setItem('user', JSON.stringify(emailKey));\n    history.push('/foods');\n  };\n\n  const handleChange = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    const {\n      value,\n      type\n    } = target;\n    console.log(value);\n\n    if (type === 'email') {\n      setEmail(value);\n    } else {\n      setPassword(value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: ['<div>', /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Trybe Recipes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      \"data-testid\": \"email-input\",\n      placeholder: \"email\",\n      onChange: handleChange,\n      value: email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      \"data-testid\": \"password-input\",\n      placeholder: \"password\",\n      onChange: handleChange,\n      value: password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"login-btn\",\n      \"data-testid\": \"login-submit-btn\",\n      onClick: submitButton,\n      disabled: disable,\n      children: \"Enter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"cMiRfNBYT4YiIjOYmneiSZMwxlk=\");\n\n_c = Login;\nexport default Login;\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/humberto/Projetos/sd-016-a-project-recipes-app/src/pages/Login.jsx"],"names":["React","useContext","useState","useEffect","PropTypes","recipesContext","Login","history","setLoginData","email","setEmail","password","setPassword","disable","setDisable","minLength","re","length","test","submitButton","localStorage","setItem","emailKey","JSON","stringify","push","handleChange","target","value","type","console","log","propTypes","shape","func","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;;;AAEA,SAASC,KAAT,OAA4B;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAC1B,QAAM;AACJC,IAAAA;AADI,MAEFP,UAAU,CAACI,cAAD,CAFd;AAIA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,SAAS,GAAG,CAAlB;AACA,UAAMC,EAAE,GAAG,cAAX,CAFc,CAGd;;AACA,QAAIL,QAAQ,CAACM,MAAT,GAAkBF,SAAlB,IAA+BC,EAAE,CAACE,IAAH,CAAQT,KAAR,CAAnC,EAAmD;AACjDK,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFD,MAEO;AACLA,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,GATQ,EASN,CAACL,KAAD,EAAQE,QAAR,CATM,CAAT;;AAWA,QAAMQ,YAAY,GAAG,MAAM;AACzBC,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,CAAnC;AACAD,IAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuC,CAAvC;AACAb,IAAAA,YAAY,CAAC;AACXC,MAAAA,KADW;AAEXE,MAAAA;AAFW,KAAD,CAAZ;AAIA,UAAMW,QAAQ,GAAG;AACfb,MAAAA;AADe,KAAjB;AAGAW,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BE,IAAI,CAACC,SAAL,CAAeF,QAAf,CAA7B;AACAf,IAAAA,OAAO,CAACkB,IAAR,CAAa,QAAb;AACD,GAZD;;AAcA,QAAMC,YAAY,GAAG,SAAgB;AAAA,QAAf;AAAEC,MAAAA;AAAF,KAAe;AACnC,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBF,MAAxB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,QAAIC,IAAI,KAAK,OAAb,EAAsB;AACpBnB,MAAAA,QAAQ,CAACkB,KAAD,CAAR;AACD,KAFD,MAEO;AACLhB,MAAAA,WAAW,CAACgB,KAAD,CAAX;AACD;AACF,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE;AAAA,iBACI,OADJ,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,qBAAY,aAFd;AAGE,MAAA,WAAW,EAAC,OAHd;AAIE,MAAA,QAAQ,EAAGF,YAJb;AAKE,MAAA,KAAK,EAAGjB;AALV;AAAA;AAAA;AAAA;AAAA,YALF,eAYE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,qBAAY,gBAFd;AAGE,MAAA,WAAW,EAAC,UAHd;AAIE,MAAA,QAAQ,EAAGiB,YAJb;AAKE,MAAA,KAAK,EAAGf;AALV;AAAA;AAAA;AAAA;AAAA,YAZF,eAmBE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,WAFZ;AAGE,qBAAY,kBAHd;AAIE,MAAA,OAAO,EAAGQ,YAJZ;AAKE,MAAA,QAAQ,EAAGN,OALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GA3EQP,K;;KAAAA,K;AA6ET,eAAeA,KAAf;AAEAA,KAAK,CAAC0B,SAAN,GAAkB;AAChBzB,EAAAA,OAAO,EAAEH,SAAS,CAAC6B,KAAV,CAAgB;AACvBR,IAAAA,IAAI,EAAErB,SAAS,CAAC8B;AADO,GAAhB,EAENC;AAHa,CAAlB","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport recipesContext from '../context/recipesContext';\n\nfunction Login({ history }) {\n  const {\n    setLoginData,\n  } = useContext(recipesContext);\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [disable, setDisable] = useState(true);\n\n  useEffect(() => {\n    const minLength = 6;\n    const re = /\\S+@\\S+\\.\\S+/;\n    // refer = https://www.horadecodar.com.br/2020/09/07/expressao-regular-para-validar-e-mail-javascript-regex/\n    if (password.length > minLength && re.test(email)) {\n      setDisable(false);\n    } else {\n      setDisable(true);\n    }\n  }, [email, password]);\n\n  const submitButton = () => {\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n    setLoginData({\n      email,\n      password,\n    });\n    const emailKey = {\n      email,\n    };\n    localStorage.setItem('user', JSON.stringify(emailKey));\n    history.push('/foods');\n  };\n\n  const handleChange = ({ target }) => {\n    const { value, type } = target;\n    console.log(value);\n    if (type === 'email') {\n      setEmail(value);\n    } else {\n      setPassword(value);\n    }\n  };\n\n  return (\n    <div className=\"login\">\n      <span>\n        { '<div>' }\n        <h1>Trybe Recipes</h1>\n      </span>\n      <input\n        type=\"email\"\n        data-testid=\"email-input\"\n        placeholder=\"email\"\n        onChange={ handleChange }\n        value={ email }\n      />\n      <input\n        type=\"password\"\n        data-testid=\"password-input\"\n        placeholder=\"password\"\n        onChange={ handleChange }\n        value={ password }\n      />\n      <button\n        type=\"button\"\n        className=\"login-btn\"\n        data-testid=\"login-submit-btn\"\n        onClick={ submitButton }\n        disabled={ disable }\n      >\n        Enter\n      </button>\n    </div>\n  );\n}\n\nexport default Login;\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}