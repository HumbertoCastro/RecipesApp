{"ast":null,"code":"var _jsxFileName = \"/home/humberto/Projetos/sd-016-a-project-recipes-app/src/components/Ingredients.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Ingredients(element) {\n  _s();\n\n  console.log(element);\n  const history = useHistory();\n  const foodIngredient = Object.values(Object.fromEntries(Object.entries(element).filter(_ref => {\n    let [key] = _ref;\n    return key.includes('strIngredient');\n  }))).filter(x => x !== null && x !== '');\n  const foodMeasure = Object.values(Object.fromEntries(Object.entries(element).filter(_ref2 => {\n    let [key] = _ref2;\n    return key.includes('strMeasure');\n  }))).filter(x => x !== null && x !== '');\n  const ing = '-ingredient-name-and-measure';\n\n  if (history.location.pathname.includes('/in-progress')) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"progresso\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n\n  return foodIngredient.map((x, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      \"data-testid\": `${index}${ing}`,\n      children: x\n    }, `${index}-food`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      \"data-testid\": `${index}${ing}`,\n      children: foodMeasure[index]\n    }, `${index}-`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, `${index}-food-ingrediet`, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this));\n}\n\n_s(Ingredients, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Ingredients;\nexport default Ingredients;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ingredients\");","map":{"version":3,"sources":["/home/humberto/Projetos/sd-016-a-project-recipes-app/src/components/Ingredients.jsx"],"names":["React","useHistory","Ingredients","element","console","log","history","foodIngredient","Object","values","fromEntries","entries","filter","key","includes","x","foodMeasure","ing","location","pathname","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,SAASC,WAAT,CAAqBC,OAArB,EAA8B;AAAA;;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,QAAMG,OAAO,GAAGL,UAAU,EAA1B;AACA,QAAMM,cAAc,GAAGC,MAAM,CAACC,MAAP,CAAcD,MAAM,CACxCE,WADkC,CACtBF,MAAM,CAChBG,OADU,CACFR,OADE,EAEVS,MAFU,CAEH;AAAA,QAAC,CAACC,GAAD,CAAD;AAAA,WAAWA,GAAG,CAACC,QAAJ,CAAa,eAAb,CAAX;AAAA,GAFG,CADsB,CAAd,EAIpBF,MAJoB,CAIZG,CAAD,IAAOA,CAAC,KAAK,IAAN,IAAcA,CAAC,KAAK,EAJd,CAAvB;AAKA,QAAMC,WAAW,GAAGR,MAAM,CAACC,MAAP,CAAcD,MAAM,CACrCE,WAD+B,CACnBF,MAAM,CAChBG,OADU,CACFR,OADE,EAEVS,MAFU,CAEH;AAAA,QAAC,CAACC,GAAD,CAAD;AAAA,WAAWA,GAAG,CAACC,QAAJ,CAAa,YAAb,CAAX;AAAA,GAFG,CADmB,CAAd,EAIjBF,MAJiB,CAITG,CAAD,IAAOA,CAAC,KAAK,IAAN,IAAcA,CAAC,KAAK,EAJjB,CAApB;AAKA,QAAME,GAAG,GAAG,8BAAZ;;AACA,MAAIX,OAAO,CAACY,QAAR,CAAiBC,QAAjB,CAA0BL,QAA1B,CAAmC,cAAnC,CAAJ,EAAwD;AACtD,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AACD,SAAOP,cAAc,CAClBa,GADI,CACA,CAACL,CAAD,EAAIM,KAAJ,kBACH;AAAA,4BACE;AAA4B,qBAAe,GAAEA,KAAM,GAAEJ,GAAI,EAAzD;AAAA,gBAA8DF;AAA9D,OAAW,GAAEM,KAAM,OAAnB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAEE,qBAAe,GAAEA,KAAM,GAAEJ,GAAI,EAF/B;AAAA,gBAIGD,WAAW,CAACK,KAAD;AAJd,OACS,GAAEA,KAAM,GADjB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,KAAY,GAAEA,KAAM,iBAApB;AAAA;AAAA;AAAA;AAAA,UAFG,CAAP;AAYD;;GA/BQnB,W;UAESD,U;;;KAFTC,W;AAiCT,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nfunction Ingredients(element) {\n  console.log(element);\n  const history = useHistory();\n  const foodIngredient = Object.values(Object\n    .fromEntries(Object\n      .entries(element)\n      .filter(([key]) => key.includes('strIngredient'))))\n    .filter((x) => x !== null && x !== '');\n  const foodMeasure = Object.values(Object\n    .fromEntries(Object\n      .entries(element)\n      .filter(([key]) => key.includes('strMeasure'))))\n    .filter((x) => x !== null && x !== '');\n  const ing = '-ingredient-name-and-measure';\n  if (history.location.pathname.includes('/in-progress')) {\n    return (\n      <div>progresso</div>\n    );\n  }\n  return foodIngredient\n    .map((x, index) => (\n      <div key={ `${index}-food-ingrediet` }>\n        <li key={ `${index}-food` } data-testid={ `${index}${ing}` }>{x}</li>\n        <li\n          key={ `${index}-` }\n          data-testid={ `${index}${ing}` }\n        >\n          {foodMeasure[index]}\n        </li>\n      </div>\n    ));\n}\n\nexport default Ingredients;\n"]},"metadata":{},"sourceType":"module"}