{"ast":null,"code":"var _jsxFileName = \"/home/humberto/Projetos/sd-016-a-project-recipes-app/src/components/Ingredients.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Ingredients(_ref) {\n  _s();\n\n  let {\n    element\n  } = _ref;\n\n  if (localStorage.getItem('inProgressRecipes') === null) {\n    const obj = {\n      cocktails: {},\n      meals: {}\n    };\n    console.log(JSON.stringify(obj));\n    localStorage.setItem('inProgressRecipes', JSON.stringify(obj));\n  }\n\n  const history = useHistory();\n\n  const handleCLick = _ref2 => {\n    let {\n      target: {\n        value\n      }\n    } = _ref2;\n    const {\n      cocktails,\n      meals\n    } = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    console.log(element);\n    const newObject = {\n      cocktails: { ...cocktails,\n        [element.idMeal]: value\n      },\n      meals: { ...meals\n      }\n    };\n    console.log(newObject);\n    localStorage.setItem('inProgressRecipes', JSON.stringify(newObject));\n    console.log(JSON.parse(localStorage.getItem('inProgressRecipes')));\n  };\n\n  const foodIngredient = Object.values(Object.fromEntries(Object.entries(element).filter(_ref3 => {\n    let [key] = _ref3;\n    return key.includes('strIngredient');\n  }))).filter(x => x !== null && x !== '');\n  const foodMeasure = Object.values(Object.fromEntries(Object.entries(element).filter(_ref4 => {\n    let [key] = _ref4;\n    return key.includes('strMeasure');\n  }))).filter(x => x !== null && x !== '');\n  const ing = '-ingredient-name-and-measure';\n\n  if (history.location.pathname.includes('/in-progress')) {\n    return foodIngredient.map((x, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": `${index}-ingredient-step`,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: `${index}-checkbox`,\n        onClick: handleCLick,\n        value: x\n      }, `${index}-food`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `${index}-checkbox`,\n        children: x\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, `${index}-food-ingrediet`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this));\n  }\n\n  return foodIngredient.map((x, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      \"data-testid\": `${index}${ing}`,\n      children: x\n    }, `${index}-food`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      \"data-testid\": `${index}${ing}`,\n      children: foodMeasure[index]\n    }, `${index}-`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, `${index}-food-ingrediet`, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this));\n}\n\n_s(Ingredients, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Ingredients;\nexport default Ingredients;\nIngredients.propTypes = {\n  element: PropTypes.shape({\n    element: PropTypes.string.isRequired\n  }).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Ingredients\");","map":{"version":3,"sources":["/home/humberto/Projetos/sd-016-a-project-recipes-app/src/components/Ingredients.jsx"],"names":["React","PropTypes","useHistory","Ingredients","element","localStorage","getItem","obj","cocktails","meals","console","log","JSON","stringify","setItem","history","handleCLick","target","value","parse","newObject","idMeal","foodIngredient","Object","values","fromEntries","entries","filter","key","includes","x","foodMeasure","ing","location","pathname","map","index","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nfunction Ingredients({ element }) {\n  if (localStorage.getItem('inProgressRecipes') === null) {\n    const obj = {\n      cocktails: {\n      },\n      meals: {\n      },\n    };\n    console.log(JSON.stringify(obj));\n    localStorage.setItem('inProgressRecipes', JSON.stringify(obj));\n  }\n  const history = useHistory();\n  const handleCLick = ({ target: { value } }) => {\n    const { cocktails, meals } = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    console.log(element);\n    const newObject = {\n      cocktails: {\n        ...cocktails,\n        [element.idMeal]: value,\n      },\n      meals: {\n        ...meals,\n      },\n    };\n    console.log(newObject);\n    localStorage.setItem('inProgressRecipes', JSON.stringify(newObject));\n    console.log(JSON.parse(localStorage.getItem('inProgressRecipes')));\n  };\n  const foodIngredient = Object.values(Object\n    .fromEntries(Object\n      .entries(element)\n      .filter(([key]) => key.includes('strIngredient'))))\n    .filter((x) => x !== null && x !== '');\n  const foodMeasure = Object.values(Object\n    .fromEntries(Object\n      .entries(element)\n      .filter(([key]) => key.includes('strMeasure'))))\n    .filter((x) => x !== null && x !== '');\n  const ing = '-ingredient-name-and-measure';\n  if (history.location.pathname.includes('/in-progress')) {\n    return foodIngredient\n      .map((x, index) => (\n        <div\n          key={ `${index}-food-ingrediet` }\n          data-testid={ `${index}-ingredient-step` }\n        >\n          <input\n            type=\"checkbox\"\n            key={ `${index}-food` }\n            name={ `${index}-checkbox` }\n            onClick={ handleCLick }\n            value={ x }\n          />\n          <label htmlFor={ `${index}-checkbox` }>{ x }</label>\n        </div>\n      ));\n  }\n  return foodIngredient\n    .map((x, index) => (\n      <div key={ `${index}-food-ingrediet` }>\n        <li key={ `${index}-food` } data-testid={ `${index}${ing}` }>{x}</li>\n        <li\n          key={ `${index}-` }\n          data-testid={ `${index}${ing}` }\n        >\n          {foodMeasure[index]}\n        </li>\n      </div>\n    ));\n}\n\nexport default Ingredients;\n\nIngredients.propTypes = {\n  element: PropTypes.shape({\n    element: PropTypes.string.isRequired,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}