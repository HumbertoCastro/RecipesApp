{"ast":null,"code":"var _jsxFileName = \"/home/humberto/Projetos/sd-016-a-project-recipes-app/src/pages/FoodDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Ingredients from '../components/Ingredients';\nimport Recomended from '../components/Recomended';\nimport RenderDetailsFood from '../components/RenderDetailsFood';\nimport saveRecipe from '../helpers/saveRecipe';\nimport blackHeart from '../images/blackHeartIcon.svg';\nimport whiteHeart from '../images/whiteHeartIcon.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FoodDetails() {\n  _s();\n\n  const history = useHistory();\n  fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=');\n  fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n  const [response, setResponse] = useState([]);\n  const [srcImg, setSrcImg] = useState(whiteHeart);\n\n  function verifyFav(id) {\n    console.log(id);\n    let favs = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n    if (favs !== null) {\n      favs = Object.values(favs);\n\n      if (favs.some(x => x.id === id)) {\n        setSrcImg(blackHeart);\n      }\n\n      console.log('lint');\n    }\n  }\n\n  const requestWithId = () => {\n    const href = document.location.href.split('/');\n    const idFood = href[href.length - 1];\n    fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${idFood}`).then(x => x.json()).then(y => {\n      setResponse(y);\n    }).then(() => {\n      verifyFav(idFood);\n    });\n  };\n\n  useEffect(() => {\n    requestWithId();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"details\",\n    children: response.length === 0 ? null : /*#__PURE__*/_jsxDEV(RenderDetailsFood, {\n      res: response.meals[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 40\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FoodDetails, \"lAi9vvrAia7syG5ZDLBiSgi07yc=\", false, function () {\n  return [useHistory];\n});\n\n_c = FoodDetails;\nexport default FoodDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodDetails\");","map":{"version":3,"sources":["/home/humberto/Projetos/sd-016-a-project-recipes-app/src/pages/FoodDetails.jsx"],"names":["React","useEffect","useState","useHistory","Ingredients","Recomended","RenderDetailsFood","saveRecipe","blackHeart","whiteHeart","FoodDetails","history","fetch","response","setResponse","srcImg","setSrcImg","verifyFav","id","console","log","favs","JSON","parse","localStorage","getItem","Object","values","some","x","requestWithId","href","document","location","split","idFood","length","then","json","y","meals"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAMC,OAAO,GAAGR,UAAU,EAA1B;AACAS,EAAAA,KAAK,CAAC,2DAAD,CAAL;AACAA,EAAAA,KAAK,CAAC,uDAAD,CAAL;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAACO,UAAD,CAApC;;AACA,WAASQ,SAAT,CAAmBC,EAAnB,EAAuB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACA,QAAIG,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAAX;;AACA,QAAIJ,IAAI,KAAK,IAAb,EAAmB;AACjBA,MAAAA,IAAI,GAAGK,MAAM,CAACC,MAAP,CAAcN,IAAd,CAAP;;AACA,UAAIA,IAAI,CAACO,IAAL,CAAWC,CAAD,IAAOA,CAAC,CAACX,EAAF,KAASA,EAA1B,CAAJ,EAAmC;AACjCF,QAAAA,SAAS,CAACR,UAAD,CAAT;AACD;;AACDW,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD;AACF;;AAED,QAAMU,aAAa,GAAG,MAAM;AAC1B,UAAMC,IAAI,GAAGC,QAAQ,CAACC,QAAT,CAAkBF,IAAlB,CAAuBG,KAAvB,CAA6B,GAA7B,CAAb;AACA,UAAMC,MAAM,GAAGJ,IAAI,CAACA,IAAI,CAACK,MAAL,GAAc,CAAf,CAAnB;AACAxB,IAAAA,KAAK,CAAE,wDAAuDuB,MAAO,EAAhE,CAAL,CACGE,IADH,CACSR,CAAD,IAAOA,CAAC,CAACS,IAAF,EADf,EACyBD,IADzB,CAC+BE,CAAD,IAAO;AACjCzB,MAAAA,WAAW,CAACyB,CAAD,CAAX;AACD,KAHH,EAGKF,IAHL,CAGU,MAAM;AACZpB,MAAAA,SAAS,CAACkB,MAAD,CAAT;AACD,KALH;AAMD,GATD;;AAUAlC,EAAAA,SAAS,CAAC,MAAM;AACd6B,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,cAEIjB,QAAQ,CAACuB,MAAT,KAAoB,CAApB,GAAwB,IAAxB,gBAA+B,QAAC,iBAAD;AAAmB,MAAA,GAAG,EAAGvB,QAAQ,CAAC2B,KAAT,CAAe,CAAf;AAAzB;AAAA;AAAA;AAAA;AAAA;AAFnC;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAtCQ9B,W;UACSP,U;;;KADTO,W;AAwCT,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Ingredients from '../components/Ingredients';\nimport Recomended from '../components/Recomended';\nimport RenderDetailsFood from '../components/RenderDetailsFood';\nimport saveRecipe from '../helpers/saveRecipe';\nimport blackHeart from '../images/blackHeartIcon.svg';\nimport whiteHeart from '../images/whiteHeartIcon.svg';\n\nfunction FoodDetails() {\n  const history = useHistory();\n  fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=');\n  fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n  const [response, setResponse] = useState([]);\n  const [srcImg, setSrcImg] = useState(whiteHeart);\n  function verifyFav(id) {\n    console.log(id);\n    let favs = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (favs !== null) {\n      favs = Object.values(favs);\n      if (favs.some((x) => x.id === id)) {\n        setSrcImg(blackHeart);\n      }\n      console.log('lint');\n    }\n  }\n\n  const requestWithId = () => {\n    const href = document.location.href.split('/');\n    const idFood = href[href.length - 1];\n    fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${idFood}`)\n      .then((x) => x.json()).then((y) => {\n        setResponse(y);\n      }).then(() => {\n        verifyFav(idFood);\n      });\n  };\n  useEffect(() => {\n    requestWithId();\n  }, []);\n  return (\n    <div className=\"details\">\n      {\n        response.length === 0 ? null : <RenderDetailsFood res={ response.meals[0] } />\n      }\n    </div>\n  );\n}\n\nexport default FoodDetails;\n"]},"metadata":{},"sourceType":"module"}