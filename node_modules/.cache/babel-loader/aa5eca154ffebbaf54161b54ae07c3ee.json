{"ast":null,"code":"var _jsxFileName = \"/home/humberto/Projetos/sd-016-a-project-recipes-app/src/components/Ingredients.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Ingredients(_ref) {\n  _s();\n\n  let {\n    element\n  } = _ref;\n\n  const verifyCheck = value => {\n    let {\n      cocktails,\n      meals\n    } = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    cocktails = Object.values(cocktails);\n    meals = Object.values(meals);\n    console.log(cocktails[1]);\n\n    if (meals.some(x => x === value) || cocktails.some(x => x === value)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const history = useHistory();\n\n  const handleCLick = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    target.checked = true;\n    const {\n      value\n    } = target;\n    const {\n      cocktails,\n      meals\n    } = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    let array = [value];\n\n    if (cocktails[element.idMeal] !== undefined) {\n      array = cocktails[element.idMeal];\n      array.push(value);\n    }\n\n    const newObject = {\n      cocktails: { ...cocktails,\n        [element.idMeal]: array\n      },\n      meals: { ...meals\n      }\n    };\n    localStorage.setItem('inProgressRecipes', JSON.stringify(newObject));\n  };\n\n  const foodIngredient = Object.values(Object.fromEntries(Object.entries(element).filter(_ref3 => {\n    let [key] = _ref3;\n    return key.includes('strIngredient');\n  }))).filter(x => x !== null && x !== '');\n  const foodMeasure = Object.values(Object.fromEntries(Object.entries(element).filter(_ref4 => {\n    let [key] = _ref4;\n    return key.includes('strMeasure');\n  }))).filter(x => x !== null && x !== '');\n  const ing = '-ingredient-name-and-measure';\n\n  const renderIngredients = () => {\n    if (history.location.pathname.includes('/in-progress')) {\n      return foodIngredient.map((x, index) => {\n        let check = false;\n\n        if (verifyCheck(x)) {\n          check = true;\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": `${index}-ingredient-step`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: `${index}-checkbox`,\n            onClick: handleCLick,\n            checked: check,\n            value: x\n          }, `${index}-food`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `${index}-checkbox`,\n            children: x\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, `${index}-food-ingrediet`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this);\n      });\n    }\n\n    return foodIngredient.map((x, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        \"data-testid\": `${index}${ing}`,\n        children: x\n      }, `${index}-food`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        \"data-testid\": `${index}${ing}`,\n        children: foodMeasure[index]\n      }, `${index}-`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, `${index}-food-ingrediet`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this));\n  };\n\n  useEffect(() => {\n    renderIngredients();\n  }, []);\n  return renderIngredients();\n}\n\n_s(Ingredients, \"bz2N+u0mX89LO9zOCfVCA9Sa20M=\", false, function () {\n  return [useHistory];\n});\n\n_c = Ingredients;\nexport default Ingredients;\nIngredients.propTypes = {\n  element: PropTypes.shape({\n    element: PropTypes.string.isRequired\n  }).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Ingredients\");","map":{"version":3,"sources":["/home/humberto/Projetos/sd-016-a-project-recipes-app/src/components/Ingredients.jsx"],"names":["React","useEffect","PropTypes","useHistory","Ingredients","element","verifyCheck","value","cocktails","meals","JSON","parse","localStorage","getItem","Object","values","console","log","some","x","history","handleCLick","target","checked","array","idMeal","undefined","push","newObject","setItem","stringify","foodIngredient","fromEntries","entries","filter","key","includes","foodMeasure","ing","renderIngredients","location","pathname","map","index","check","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nfunction Ingredients({ element }) {\n  const verifyCheck = (value) => {\n    let { cocktails, meals } = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    cocktails = Object.values(cocktails);\n    meals = Object.values(meals);\n    console.log(cocktails[1]);\n    if (meals.some((x) => x === value) || cocktails.some((x) => x === value)) {\n      return true;\n    }\n    return false;\n  };\n  const history = useHistory();\n  const handleCLick = ({ target }) => {\n    target.checked = true;\n    const { value } = target;\n    const { cocktails, meals } = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    let array = [value];\n    if (cocktails[element.idMeal] !== undefined) {\n      array = cocktails[element.idMeal];\n      array.push(value);\n    }\n    const newObject = {\n      cocktails: {\n        ...cocktails,\n        [element.idMeal]: array,\n      },\n      meals: {\n        ...meals,\n      },\n    };\n    localStorage.setItem('inProgressRecipes', JSON.stringify(newObject));\n  };\n  const foodIngredient = Object.values(Object\n    .fromEntries(Object\n      .entries(element)\n      .filter(([key]) => key.includes('strIngredient'))))\n    .filter((x) => x !== null && x !== '');\n  const foodMeasure = Object.values(Object\n    .fromEntries(Object\n      .entries(element)\n      .filter(([key]) => key.includes('strMeasure'))))\n    .filter((x) => x !== null && x !== '');\n  const ing = '-ingredient-name-and-measure';\n  const renderIngredients = () => {\n    if (history.location.pathname.includes('/in-progress')) {\n      return foodIngredient\n        .map((x, index) => {\n          let check = false;\n          if (verifyCheck(x)) {\n            check = true;\n          }\n          return (\n            <div\n              key={ `${index}-food-ingrediet` }\n              data-testid={ `${index}-ingredient-step` }\n            >\n              <input\n                type=\"checkbox\"\n                key={ `${index}-food` }\n                name={ `${index}-checkbox` }\n                onClick={ handleCLick }\n                checked={ check }\n                value={ x }\n              />\n              <label htmlFor={ `${index}-checkbox` }>{ x }</label>\n            </div>\n          );\n        });\n    }\n    return foodIngredient\n      .map((x, index) => (\n        <div key={ `${index}-food-ingrediet` }>\n          <li key={ `${index}-food` } data-testid={ `${index}${ing}` }>{x}</li>\n          <li\n            key={ `${index}-` }\n            data-testid={ `${index}${ing}` }\n          >\n            {foodMeasure[index]}\n          </li>\n        </div>\n      ));\n  };\n  useEffect(() => {\n    renderIngredients();\n  }, []);\n  return renderIngredients();\n}\n\nexport default Ingredients;\n\nIngredients.propTypes = {\n  element: PropTypes.shape({\n    element: PropTypes.string.isRequired,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}